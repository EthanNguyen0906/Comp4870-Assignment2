@page "/articles"
@using Assignment2Library.Data.Models
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer


<h1 class="mb-0">Articles</h1>

    <div class="d-flex justify-content-between mt-3 mb-3">
        <button class="btn btn-primary btn-lg shadow-sm" @onclick="ViewUserArticles">
            <i class="bi bi-file-earmark-text me-2"></i> My Published Articles
        </button>

        <button class="btn btn-success btn-lg shadow-sm" @onclick="CreateArticle">
            <i class="bi bi-plus-circle-fill me-2"></i> Create Article
        </button>
    </div>


<div class="row">
    @if (articles != null)
    {
        @foreach (var article in articles)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 d-flex flex-column shadow-sm">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@article.Title</h5>
                        <h6 class="card-subtitle mb-2 text-muted">
                            @(article.Contributor != null 
                                ? $"{article.Contributor.FirstName} {article.Contributor.LastName}" 
                                : article.ContributorUsername),
                            @article.CreateDate.ToString("MMMM dd, yyyy")
                        </h6>
                        <p class="card-text">
                            @{
                                var excerpt = article.Body.Length > 100 ? article.Body.Substring(0, 100) : article.Body;
                            }
                            @excerpt
                            @if (article.Body.Length > 100)
                            {
                                <a @onclick="@(() => ViewArticle(article.ArticleId))">more...</a>
                            }
                        </p>
                        <div class="mt-auto">
                            @if (article.Body.Length < 100)
                            {
                                <button class="btn btn-info" @onclick="@(() => ViewArticle(article.ArticleId))">
                                    Display in full view
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private List<Article>? articles;
    private bool isAuthenticated;
    private bool approved = true; // Replace with logic to load from a service or claim

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;

       // articles = await ArticleService.GetArticlesAsync(); // You must implement this service
    }

    private void CreateArticle()
    {
        Navigation.NavigateTo("/articles/create");
    }

    private void ViewUserArticles()
    {
        Navigation.NavigateTo("/article/userrecords");
    }

    private void ViewArticle(int id)
    {
        Navigation.NavigateTo($"/articles/display/{id}");
    }
}