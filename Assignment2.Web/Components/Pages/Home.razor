@page "/"
@rendermode InteractiveServer
@using System.Net.Http.Json
@using Assignment2Library.Data.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>Articles</PageTitle>

<div class="container">
    @if (articles == null)
    {
        <p class="text-center"><em>Loading articles...</em></p>
    }
    else if (!articles.Any())
    {
        <p class="text-center">No articles found.</p>
    }
    else
    {
        <QuickGrid TGridItem="Article" Items="articles.AsQueryable()" class="table">
            <PropertyColumn Property="@(a => a.Title)" Title="Title" Sortable="true" />
            
            <TemplateColumn Title="Contributor" Context="article">
                @(article.Contributor != null 
                    ? $"{article.Contributor.FirstName} {article.Contributor.LastName}" 
                    : article.ContributorUsername)
            </TemplateColumn>

            <TemplateColumn Title="Dates" Context="article">
                <small class="text-muted">
                    Start: @article.StartDate.ToShortDateString()<br />
                    End: @article.EndDate.ToShortDateString()
                </small>
            </TemplateColumn>

            <TemplateColumn Title="Excerpt" Context="article">
                @{
                    var excerpt = article.Body.Length > 100 
                        ? article.Body.Substring(0, 100) 
                        : article.Body;
                }
                @excerpt
                @if (article.Body.Length > 100)
                {
                    <NavLink class="more-link" href="@($"/articles/details/{article.ArticleId}")">
                        more...
                    </NavLink>
                }
            </TemplateColumn>

            <TemplateColumn Title="Actions" Context="article">
                @if (article.Body.Length <= 200)
                {
                    <NavLink class="btn btn-info btn-sm" href="@($"/articles/details/{article.ArticleId}")">
                        Full View
                    </NavLink>
                }
            </TemplateColumn>
        </QuickGrid>
    }
</div>

@code {
    private Article[]? articles;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            articles = await Http.GetFromJsonAsync<Article[]>("http://localhost:5144/api/Articles");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching articles: {ex.Message}");
        }
    }
}