@page "/"
@using System.Net.Http.Json
@using Assignment2Library.Data.Models
@using System.Text.RegularExpressions
@using Assignment2Web.Service
@inject HttpClient Http
@inject NavigationManager NavManager
@inject ArticleStateService ArticleStateService


<PageTitle>Articles</PageTitle>

<div class="container">
    <div class="row">
        @if (articles == null)
        {
            <p class="text-center"><em>Loading articles...</em></p>
        }
        else if (!articles.Any())
        {
            <p class="text-center">No articles found.</p>
        }
        else
        {
            @foreach (var article in articles)
            {
                var currentArticle = article;
                <div class="col-md-4 mb-4">
                    <div class="card h-100 d-flex flex-column shadow-sm">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@article.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">
                                @(article.Contributor != null 
                                    ? $"{article.Contributor.FirstName} {article.Contributor.LastName}" 
                                    : article.ContributorUsername)
                            </h6>
                            <p class="card-text">
                                <small class="text-muted">
                                    Start Date: @article.StartDate.ToShortDateString()<br />
                                    End Date: @article.EndDate.ToShortDateString()
                                </small>
                            </p>
                            <p class="card-text">
                                 @{
                                var excerpt = article.Body.Length > 100 ? article.Body.Substring(0, 100) : article.Body;
                                }
                                @excerpt
                                @if (article.Body.Length > 100)
                                {
                                    <button class="more-link" 
                                        @onclick="() => NavigateToDetails(currentArticle)" 
                                        @onclick:preventDefault>
                                        more...
                                    </button>
                                }
                            </p>
                            <div class="mt-auto">
                                @if (article.Body.Length <= 200)
                                {
                                   <button class="btn btn-info" 
                                        @onclick="() => NavigateToDetails(currentArticle)" 
                                        @onclick:preventDefault>
                                        Display in full view
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@code {
    private Article[]? articles;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            articles = await Http.GetFromJsonAsync<Article[]>("http://localhost:5144/api/Articles/articles");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching articles: {ex.Message}");
        }
    }

   private void NavigateToDetails(Article article)
    {
        Console.WriteLine("Yippee");
        ArticleStateService.SelectedArticle = article;
        NavManager.NavigateTo("/articles/details");
    }
}
